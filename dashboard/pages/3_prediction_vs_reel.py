# üìÅ dashboard/pages/3_prediction_vs_reel.py
import streamlit as st
import pandas as pd
import plotly.express as px

# ------------------------------------------------------
# ‚úÖ Titre et introduction
# ------------------------------------------------------
st.title("üìà Comparaison Taux de Transmission : R√©el vs Pr√©dit")

st.markdown("""
Cette page compare le **taux de transmission r√©el** observ√© dans les donn√©es
avec le **taux pr√©dit** par le mod√®le de Machine Learning.

‚úî Tu peux choisir un pays pour visualiser la qualit√© des pr√©dictions.
""")

# ------------------------------------------------------
# ‚úÖ 1Ô∏è‚É£ Charger les r√©sultats de pr√©diction
# ------------------------------------------------------
@st.cache_data
def charger_donnees():
    return pd.read_csv("prediction/predictions_resultats.csv", parse_dates=['date'])

df = charger_donnees()

# ------------------------------------------------------
# ‚úÖ 2Ô∏è‚É£ S√©lection du pays
# ------------------------------------------------------
pays_disponibles = sorted(df['nom_pays'].dropna().unique())
pays_selectionne = st.selectbox("üåç Choisir un pays :", pays_disponibles)

# ------------------------------------------------------
# ‚úÖ 3Ô∏è‚É£ Filtrage des donn√©es pour ce pays
# ------------------------------------------------------
df_pays = df[df['nom_pays'] == pays_selectionne].sort_values('date')

if df_pays.empty:
    st.warning("Aucune donn√©e disponible pour ce pays.")
    st.stop()

# ------------------------------------------------------
# ‚úÖ 4Ô∏è‚É£ Graphique avec Plotly
# ------------------------------------------------------
fig = px.line(
    df_pays,
    x="date",
    y=["taux_transmission", "taux_transmission_pr√©dit"],
    labels={"value": "Taux de Transmission", "variable": "Type"},
    title=f"Taux de Transmission : R√©el vs Pr√©dit ({pays_selectionne})",
)

fig.update_traces(mode='lines+markers')
fig.update_layout(
    legend_title_text='Type de courbe',
    legend=dict(
        itemsizing='constant'
    )
)

# ‚úÖ 5Ô∏è‚É£ Affichage du graphique
st.plotly_chart(fig, use_container_width=True)

# ------------------------------------------------------
# ‚úÖ 6Ô∏è‚É£ Explications suppl√©mentaires
# ------------------------------------------------------
st.markdown("""
**‚ÑπÔ∏è Interpr√©tation :**  
- La courbe bleue correspond au **taux r√©el** observ√© dans l'historique.
- La courbe rouge pointill√©e correspond au **taux pr√©dit** par le mod√®le.
- Plus les deux courbes se ressemblent, plus le mod√®le est fiable pour ce pays.

En cas de fortes diff√©rences, cela montre qu'il reste des marges d'am√©lioration.
""")
