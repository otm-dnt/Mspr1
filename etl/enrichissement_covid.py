# üìÅ etl/enrichissement_covid.py

import pandas as pd
import psycopg2

# -------------------------------------------------
# 1. Connexion s√©curis√©e √† PostgreSQL
# -------------------------------------------------
try:
    connexion = psycopg2.connect(
        host="localhost",
        database="pandemie_mspr",
        user="postgres",
        password="admin"
    )
    print("‚úÖ Connexion PostgreSQL r√©ussie.")
except Exception as e:
    print("‚ùå Erreur de connexion :", e)
    exit()

# -------------------------------------------------
# 2. Chargement du fichier CSV r√©sum√©
# -------------------------------------------------
try:
    df = pd.read_csv("data/worldometer_coronavirus_summary_data.csv")
    print("üìÑ Fichier r√©sum√© charg√© avec succ√®s.")
except Exception as e:
    print("‚ùå Erreur chargement CSV r√©sum√© :", e)
    exit()

# -------------------------------------------------
# 3. Nettoyage du fichier r√©sum√©
# -------------------------------------------------

# On garde uniquement les colonnes pertinentes
colonnes = ['country', 'continent', 'population', 'total_recovered', 'serious_or_critical']
df = df[colonnes].copy()

# Supprimer les doublons exacts
df.drop_duplicates(inplace=True)

# Supprimer les lignes sans pays ou sans donn√©es essentielles
df.dropna(subset=['country', 'continent', 'population'], inplace=True)

# Standardiser les noms de pays
df['country'] = df['country'].str.strip().str.title()

# Supprimer les lignes qui ne concernent pas des pays (ex : continents globaux)
continents_invalides = ['World', 'Africa', 'Asia', 'Europe', 'North America', 'South America', 'Oceania']
df = df[~df['country'].isin(continents_invalides)]

# ‚úÖ R√©sum√© apr√®s nettoyage
print(f"üìä Donn√©es propres : {len(df)} lignes pr√™tes √† l‚Äôinsertion.")
print(df.head())

# -------------------------------------------------
# 4. Mise √† jour de la table PAYS (continent + population)
# -------------------------------------------------
try:
    curseur = connexion.cursor()
    pays_mis_a_jour = 0

    for index, ligne in df.iterrows():
        try:
            curseur.execute("""
                UPDATE PAYS
                SET continent = %s, population = %s
                WHERE nom_pays = %s;
            """, (
                ligne['continent'],
                ligne['population'],
                ligne['country']
            ))
            pays_mis_a_jour += 1
        except Exception as e:
            print(f"‚ö†Ô∏è Erreur pays ligne {index}: {e}")
            continue

    connexion.commit()
    print(f"‚úÖ Table PAYS mise √† jour : {pays_mis_a_jour} pays modifi√©s.")

except Exception as e:
    print("‚ùå Erreur globale update PAYS :", e)
    connexion.rollback()

# -------------------------------------------------
# 5. Mise √† jour des champs STATISTIQUE (gu√©ris + cas graves)
# -------------------------------------------------
try:
    stats_modifi√©es = 0

    for index, ligne in df.iterrows():
        try:
            # R√©cup√©rer l‚ÄôID du pays
            curseur.execute("SELECT id_pays FROM PAYS WHERE nom_pays = %s;", (ligne['country'],))
            resultat = curseur.fetchone()
            if resultat is None:
                continue
            id_pays = resultat[0]

            # R√©cup√©rer l‚ÄôID de la maladie (COVID-19)
            curseur.execute("SELECT id_maladie FROM MALADIE WHERE nom_maladie = 'COVID-19';")
            id_maladie = curseur.fetchone()[0]

            # Mettre √† jour les statistiques (si maladie = COVID-19)
            curseur.execute("""
                UPDATE STATISTIQUE
                SET total_gu√©ris = %s, cas_graves = %s
                WHERE id_pays = %s AND id_maladie = %s;
            """, (
                ligne['total_recovered'],
                ligne['serious_or_critical'],
                id_pays,
                id_maladie
            ))

            stats_modifi√©es += 1
        except Exception as e:
            print(f"‚ö†Ô∏è Erreur ligne {index}: {e}")
            continue

    connexion.commit()
    print(f"‚úÖ STATISTIQUE enrichie avec succ√®s : {stats_modifi√©es} lignes modifi√©es.")

except Exception as e:
    print("‚ùå Erreur globale update STATISTIQUE :", e)
    connexion.rollback()

finally:
    curseur.close()
    connexion.close()
    print("üîí Connexion ferm√©e proprement.")
